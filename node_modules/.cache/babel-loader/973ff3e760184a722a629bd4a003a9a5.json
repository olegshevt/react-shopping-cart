{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PRODUCT_CART':\n      const itemsData = { ...state,\n        items: {\n          [action.payload.id]: !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id], action.payload]\n        }\n      };\n      const productArr = [].concat.apply([], Object.values(itemsData));\n      return { ...state,\n        items: itemsData,\n        totalCount: productArr.length,\n        totalPrice: productArr.reduce((sum, obj) => obj.price + sum, 0)\n      };\n  }\n\n  return state;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/oleg/Desktop/DEV/react-shop/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","cart","state","action","type","itemsData","payload","id","productArr","concat","apply","Object","values","length","reduce","sum","obj","price"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AAEI,YAAMC,SAAS,GAAG,EACd,GAAGH,KADW;AAEdJ,QAAAA,KAAK,EAAE;AACH,WAACK,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqB,CAACL,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAD,GAAkC,CAACJ,MAAM,CAACG,OAAR,CAAlC,GACjB,CAAC,GAAGJ,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAJ,EAAoCJ,MAAM,CAACG,OAA3C;AAFD;AAFO,OAAlB;AAQA,YAAME,UAAU,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBC,MAAM,CAACC,MAAP,CAAcP,SAAd,CAApB,CAAnB;AAEA,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,KAAK,EAAEO,SAFJ;AAGHL,QAAAA,UAAU,EAAEQ,UAAU,CAACK,MAHpB;AAIHd,QAAAA,UAAU,EAAES,UAAU,CAACM,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAA5C,EAAiD,CAAjD;AAJT,OAAP;AAbR;;AAqBA,SAAOb,KAAP;AACH,CAvBD;;AAyBA,eAAeD,IAAf","sourcesContent":["\nconst initialState = {\n    items: {},\n    totalPrice: 0,\n    totalCount: 0\n}\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_PRODUCT_CART':\n\n            const itemsData = {\n                ...state,\n                items: {\n                    [action.payload.id]: !state.items[action.payload.id] ? [action.payload] :\n                        [...state.items[action.payload.id], action.payload],\n                }\n            }\n\n            const productArr = [].concat.apply([], Object.values(itemsData));\n\n            return {\n                ...state,\n                items: itemsData,\n                totalCount: productArr.length,\n                totalPrice: productArr.reduce((sum, obj) => obj.price + sum, 0)\n            }\n\n    }\n    return state;\n}\n\nexport default cart;"]},"metadata":{},"sourceType":"module"}