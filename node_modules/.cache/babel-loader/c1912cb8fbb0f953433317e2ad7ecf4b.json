{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst specificProductTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst _get = (obj, path) => {\n  const [firstKey, ...keys] = path.split('.');\n  return keys.reduce((val, key) => {\n    return val[key];\n  }, obj[firstKey]);\n};\n\nconst getTotalSum = (obj, path) => {\n  return Object.values(obj).reduce((sum, obj) => {\n    const value = _get(obj, path);\n\n    return sum + value;\n  }, 0);\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PRODUCT_CART':\n      const currentProducts = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n      const itemsData = { ...state.items,\n        [action.payload.id]: {\n          items: currentProducts,\n          totalSpecificPrice: specificProductTotalPrice(currentProducts)\n        }\n      };\n      const totalCount = getTotalSum(itemsData, 'items.length');\n      const totalPrice = getTotalSum(itemsData, 'totalSpecificPrice');\n      return { ...state,\n        items: itemsData,\n        totalCount,\n        totalPrice\n      };\n\n    case 'REMOVE_PRODUCT_CART':\n      return { ...state,\n        items: {},\n        totalCount: 0,\n        totalPrice: 0\n      };\n\n    case 'REMOVE_PRODUCT_ITEM':\n      const stateItems = { ...state.items\n      };\n      delete stateItems[action.payload];\n      const currentTotalCount = stateItems[action.payload].items.length;\n      const currentTotalPrice = stateItems[action.payload].totalPrice;\n      return { ...state,\n        items: stateItems,\n        totalCount: state.totalCount - currentTotalCount,\n        totalPrice: state.totalPrice - currentTotalPrice\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/oleg/Desktop/DEV/react-shop/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","specificProductTotalPrice","arr","reduce","sum","obj","price","_get","path","firstKey","keys","split","val","key","getTotalSum","Object","values","value","cart","state","action","type","currentProducts","payload","id","itemsData","totalSpecificPrice","stateItems","currentTotalCount","length","currentTotalPrice"],"mappings":"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","sourcesContent":["\nconst initialState = {\n    items: {},\n    totalPrice: 0,\n    totalCount: 0\n}\n\nconst specificProductTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst _get = (obj, path) => {\n    const [firstKey, ...keys] = path.split('.');\n    return keys.reduce((val, key) => {\n        return val[key];\n    }, obj[firstKey]);\n};\n\nconst getTotalSum = (obj, path) => {\n    return Object.values(obj).reduce((sum, obj) => {\n        const value = _get(obj, path);\n        return sum + value;\n    }, 0);\n};\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_PRODUCT_CART':\n\n            const currentProducts = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n\n            const itemsData = {\n                ...state.items,\n                [action.payload.id]: {\n                    items: currentProducts,\n                    totalSpecificPrice: specificProductTotalPrice(currentProducts),\n                }\n            }\n\n            const totalCount = getTotalSum(itemsData, 'items.length');\n            const totalPrice = getTotalSum(itemsData, 'totalSpecificPrice');\n\n            return {\n                ...state,\n                items: itemsData,\n                totalCount,\n                totalPrice,\n\n            }\n\n        case 'REMOVE_PRODUCT_CART':\n            return {\n                ...state,\n                items: {},\n                totalCount: 0,\n                totalPrice: 0\n            }\n\n        case 'REMOVE_PRODUCT_ITEM':\n\n            const stateItems = {\n                ...state.items,\n            };\n            delete stateItems[action.payload];\n            const currentTotalCount = stateItems[action.payload].items.length;\n            const currentTotalPrice = stateItems[action.payload].totalPrice;\n\n            return {\n                ...state,\n                items: stateItems,\n                totalCount: state.totalCount - currentTotalCount,\n                totalPrice: state.totalPrice - currentTotalPrice\n            }\n\n        default:\n            return state;\n\n    }\n}\nexport default cart;"]},"metadata":{},"sourceType":"module"}